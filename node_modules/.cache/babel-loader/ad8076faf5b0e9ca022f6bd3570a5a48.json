{"ast":null,"code":"var _jsxFileName = \"/home/jam/Desktop/Javascript Projects/covid-19/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDaily } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDaily] = useState([]);\n  useEffect(() => void (async () => setDaily(await fetchDaily()))(), []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        fill: true,\n        borderColor: '#66ff33'\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        fill: true,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)'\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        backgroundColor: [\"rgba(255, 0, 0, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(0, 0, 255, 0.5)\"],\n        label: \"People\",\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current country is ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/jam/Desktop/Javascript Projects/covid-19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDaily","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDaily","lineChart","length","labels","map","date","datasets","label","fill","borderColor","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAN;AAAsCC,EAAAA;AAAtC,CAAD,KAAkD;AAC5D,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI,KAAK,CAAC,YAAUY,QAAQ,CAAC,MAAMX,UAAU,EAAjB,CAAnB,GAAV,EAAqD,EAArD,CAAT;AAGA,QAAMY,SAAS,GACXF,SAAS,CAACG,MAAV,gBACA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNZ,QAAAA,IAAI,EAACK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACT,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADC;AAENY,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,IAAI,EAAC,IAHC;AAINC,QAAAA,WAAW,EAAC;AAJN,OAAD,EAKP;AACEf,QAAAA,IAAI,EAACK,SAAS,CAACK,GAAV,CAAc,CAAC;AAACP,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAEEU,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,IAAI,EAAC,IAHP;AAIEC,QAAAA,WAAW,EAAC,KAJd;AAKEC,QAAAA,eAAe,EAAC;AALlB,OALO;AAFP,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAiBG,IAlBP;AAqBA,QAAMC,QAAQ,GACVhB,SAAS,gBACT,oBAAC,GAAD;AACA,IAAA,IAAI,EAAE;AACFQ,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEFG,MAAAA,QAAQ,EAAC,CAAC;AACNI,QAAAA,eAAe,EAAC,CAAC,sBAAD,EAAwB,sBAAxB,EAA+C,sBAA/C,CADV;AAENH,QAAAA,KAAK,EAAC,QAFA;AAGNb,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACiB,KAAX,EAAkBhB,SAAS,CAACgB,KAA5B,EAAmCf,MAAM,CAACe,KAA1C;AAHC,OAAD;AAFP,KADN;AAUA,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADF;AAELC,MAAAA,KAAK,EAAC;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAeE,QAAAA,IAAI,EAAE,sBAAqBlB,OAAQ;AAAlD;AAFD,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAeJ,IAhBT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,OAAO,GAAGa,QAAH,GAAcV,SAD1B,CADJ;AAKH,CAnDD;;AAqDA,eAAeR,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {fetchDaily} from \"../../api\";\r\nimport {Line, Bar} from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\"\r\n\r\n\r\nconst Chart = ({data:{confirmed, recovered, deaths}, country})=>{\r\n    const [dailyData, setDaily] = useState([]);\r\n\r\n    useEffect(()=>void (async ()=>setDaily(await fetchDaily()))(),[])\r\n    \r\n    \r\n    const lineChart = (\r\n        dailyData.length?\r\n        <Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:\"Infected\",\r\n                fill:true,\r\n                borderColor:'#66ff33'\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:\"Deaths\",\r\n                fill:true,\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255, 0, 0, 0.5)'\r\n            }]\r\n        }}\r\n        />:null\r\n    );\r\n    \r\n    const barChart = (\r\n        confirmed ?\r\n        <Bar\r\n        data={{\r\n            labels:[\"Infected\", \"Recovered\", \"Deaths\"],\r\n            datasets:[{\r\n                backgroundColor:[\"rgba(255, 0, 0, 0.5)\",\"rgba(0, 255, 0, 0.5)\",\"rgba(0, 0, 255, 0.5)\"],\r\n                label:\"People\",\r\n                data:[confirmed.value, recovered.value, deaths.value]\r\n            }],\r\n\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true, text:`Current country is ${country}`}\r\n        }}\r\n        /> : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}